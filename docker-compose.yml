version: '2.1'
networks:
  arkham:
    driver: bridge
services:
  db:
    image: 'postgres:9.5'
    environment:
      POSTGRES_DB: '${KONG_PG_DATABASE:-kong}'
      POSTGRES_PASSWORD: '${KONG_PG_PASSWORD:-kong}'
      POSTGRES_USER: '${KONG_PG_USER:-kong}'
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-U'
        - '${KONG_PG_USER:-kong}'
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - arkham
    volumes:
      - 'kong_data:/var/lib/postgresql/data'
  kong:
    image: '${KONG_DOCKER_TAG:-kong:1.1.0}'
    container_name: kong
    hostname: kong
    command: kong migrations bootstrap
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: '${KONG_PG_DATABASE:-kong}'
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: '${KONG_PG_PASSWORD:-kong}'
      KONG_PG_USER: '${KONG_PG_USER:-kong}'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - arkham
    ports:
      - '8000:8000/tcp'
      - '8001:8001/tcp'
      - '8443:8443/tcp'
      - '8444:8444/tcp'
    restart: on-failure
  konga:
    container_name: konga
    hostname: konga
    build:
      context: .
      dockerfile: Dockerfile-konga
    ports:
      - '1337:1337'
    tty: true
    networks:
      - arkham
  irisdb:
    container_name: irisdb
    hostname: irisdb
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile-iris
    restart: on-failure
    stdin_open: true
    tty: true
    ports:
      - '51773:51773'
      - '52773:52773'
      - '53773:53773'
    networks:
      - arkham
    volumes:
      - 'datairis:/var/data'
volumes:
  kong_data: {}
  datairis:
    driver: local